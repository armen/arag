== Execution flow ==

Execution Flow is bihavior of Arag for calling methods in Controllers.

=== GET and POST methods ===

Arag implements new feature for calling controller's method more easy and understandable. When a function name calls within GET method, Arag calls "<functionname>_read" method in controller. Also if function name calls within POST methos, Arag calls "<functionname_write>" method in controller. If function calls within GET method and "<functionname>_read" does not exist, or function name calls within POST method and "<functionname>_write" does not exist, Arag automatically calls "<functionname>" function.

For example :

{{{
    class My_Controller extends Controller
    {
        public function example_read()
        {
            // Statements
        }

        public function example_write()
        {
            // Statements
        }

        // public function example()
        // {
        //     // This will never execute
        //     // Statements
        // }
    }
}}}

If you load address "my_controller/example", Arag calls "example_read()" because method is GET. But if you submit a form to "my_controller/example" by POST method, Arag calls "example_write()".
Although, Arag calls "example" function automatically, If could not find none of them.

=== Validation and Error Handling ===

When a method requested within GET method, if "<functionname>_validate_read" exists it will be called before "<functionname>_read", if returned value of "<functionname>_validate_read" was True it indicates that validation passed and "<functionname>_validate_read" should be called, otherwise, "<functionname>_read_error" will be called to handle the error.

For example:

{{{
    class My_Controller extends Controller
    {
        public function example_read()
        {
            // Statements
        }

        public function example_validate_read()
        {
            // Validate input and return the result;

            return $result;
        }

        public function example_read_error()
        {
            // Statements
        }
    }
}}}
